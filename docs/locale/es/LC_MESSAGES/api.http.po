# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, goverfl0w
# This file is distributed under the same license as the interactions.py
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: interactions.py 4.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-17 16:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api.http.rst:4
msgid "HTTP"
msgstr ""

#: interactions.api.http.route.Route:1 of
msgid "A class representing how an HTTP route is structured."
msgstr ""

#: interactions.api.http.client.HTTPClient
#: interactions.api.http.limiter.Limiter interactions.api.http.request._Request
#: interactions.api.http.route.Route of
msgid "Variables"
msgstr ""

#: interactions.api.http.route.Route:3 of
msgid "The HTTP route path."
msgstr ""

#: interactions.api.http.route.Route:4 of
msgid "The HTTP method."
msgstr ""

#: interactions.api.http.route.Route:5 of
msgid "The URL path."
msgstr ""

#: interactions.api.http.route.Route:6 of
msgid "The channel ID from the bucket if given."
msgstr ""

#: interactions.api.http.route.Route:7 of
msgid "The guild ID from the bucket if given."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.delete_channel
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.channel.ChannelRequest.trigger_typing
#: interactions.api.http.client.HTTPClient
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_ban
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_kick
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.delete_guild
#: interactions.api.http.guild.GuildRequest.delete_guild_integration
#: interactions.api.http.guild.GuildRequest.delete_guild_role
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_auditlog
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state
#: interactions.api.http.guild.GuildRequest.remove_guild_ban
#: interactions.api.http.guild.GuildRequest.remove_guild_member
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest._post_followup
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response
#: interactions.api.http.interaction.InteractionRequest.delete_application_command
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.limiter.Limiter
#: interactions.api.http.member.MemberRequest.add_member_role
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.member.MemberRequest.remove_member_role
#: interactions.api.http.member.MemberRequest.search_guild_members
#: interactions.api.http.message.MessageRequest.create_message
#: interactions.api.http.message.MessageRequest.delete_message
#: interactions.api.http.message.MessageRequest.delete_messages
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.pin_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.message.MessageRequest.send_message
#: interactions.api.http.message.MessageRequest.unpin_message
#: interactions.api.http.reaction.ReactionRequest.create_reaction
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction
#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction
#: interactions.api.http.request._Request
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest.add_member_to_thread
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.join_thread
#: interactions.api.http.thread.ThreadRequest.leave_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message
#: interactions.api.http.webhook.WebhookRequest.delete_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Parameters"
msgstr ""

#: interactions.api.http.channel.ChannelRequest
#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.delete_channel
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.channel.ChannelRequest.trigger_typing
#: interactions.api.http.client.HTTPClient.get_bot_gateway
#: interactions.api.http.client.HTTPClient.get_current_authorisation_information
#: interactions.api.http.client.HTTPClient.get_current_bot_information
#: interactions.api.http.client.HTTPClient.get_gateway
#: interactions.api.http.client.HTTPClient.login
#: interactions.api.http.client.HTTPClient.logout
#: interactions.api.http.emoji.EmojiRequest
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_ban
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_kick
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.delete_guild
#: interactions.api.http.guild.GuildRequest.delete_guild_integration
#: interactions.api.http.guild.GuildRequest.delete_guild_role
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_auditlog
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_self_guilds
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state
#: interactions.api.http.guild.GuildRequest.remove_guild_ban
#: interactions.api.http.guild.GuildRequest.remove_guild_member
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest
#: interactions.api.http.interaction.InteractionRequest._post_followup
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response
#: interactions.api.http.interaction.InteractionRequest.delete_application_command
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.limiter.Limiter
#: interactions.api.http.member.MemberRequest
#: interactions.api.http.member.MemberRequest.add_member_role
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.member.MemberRequest.remove_member_role
#: interactions.api.http.member.MemberRequest.search_guild_members
#: interactions.api.http.message.MessageRequest
#: interactions.api.http.message.MessageRequest.create_message
#: interactions.api.http.message.MessageRequest.delete_message
#: interactions.api.http.message.MessageRequest.delete_messages
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.pin_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.message.MessageRequest.send_message
#: interactions.api.http.message.MessageRequest.unpin_message
#: interactions.api.http.reaction.ReactionRequest
#: interactions.api.http.reaction.ReactionRequest.create_reaction
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction
#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction
#: interactions.api.http.request._Request
#: interactions.api.http.request._Request._check_lock
#: interactions.api.http.request._Request._check_session
#: interactions.api.http.request._Request.close
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route interactions.api.http.route.Route.endpoint
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest
#: interactions.api.http.thread.ThreadRequest.add_member_to_thread
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.join_thread
#: interactions.api.http.thread.ThreadRequest.leave_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread
#: interactions.api.http.user.UserRequest
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_self
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Return type"
msgstr ""

#: interactions.api.http.route.Route.get_bucket:1 of
msgid ""
"Returns the route's bucket. If shared_bucket is None, returns the path "
"with major parameters. Otherwise, it relies on Discord's given bucket."
msgstr ""

#: interactions.api.http.route.Route.get_bucket:4 of
msgid "The bucket that Discord provides, if available."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.client.HTTPClient.get_bot_gateway
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route.endpoint
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_self
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Returns"
msgstr ""

#: interactions.api.http.route.Route.get_bucket:7 of
msgid "The route bucket."
msgstr ""

#: interactions.api.http.route.Route.endpoint:1 of
msgid "Returns the route's endpoint."
msgstr ""

#: interactions.api.http.route.Route.endpoint:3 of
msgid "The route endpoint."
msgstr ""

#: interactions.api.http.limiter.Limiter:1 of
msgid "A class representing a limitation for an HTTP request."
msgstr ""

#: interactions.api.http.limiter.Limiter:3 of
msgid "The \"lock\" or controller of the request."
msgstr ""

#: interactions.api.http.limiter.Limiter:4 of
msgid "The remaining time before the request can be ran."
msgstr ""

#: interactions.api.http.request._Request:1 of
msgid "A class representing how HTTP requests are sent/read."
msgstr ""

#: interactions.api.http.request._Request:3 of
msgid "The current application token."
msgstr ""

#: interactions.api.http.request._Request:4 of
msgid "The current coroutine event loop."
msgstr ""

#: interactions.api.http.request._Request:5 of
msgid "The current per-route rate limiters from the API."
msgstr ""

#: interactions.api.http.request._Request:6 of
msgid "The current endpoint to shared_bucket cache from the API."
msgstr ""

#: interactions.api.http.request._Request:7 of
msgid "The current headers for an HTTP request."
msgstr ""

#: interactions.api.http.request._Request:8 of
msgid "The current session for making requests."
msgstr ""

#: interactions.api.http.request._Request:9 of
msgid "The global rate limiter."
msgstr ""

#: interactions.api.http.request._Request._check_session:1 of
msgid "Ensures that we have a valid connection session."
msgstr ""

#: interactions.api.http.request._Request._check_lock:1 of
msgid "Checks the global lock for its current state."
msgstr ""

#: interactions.api.http.request._Request.request:1 of
msgid "Sends a request to the Discord API."
msgstr ""

#: interactions.api.http.request._Request.request:3 of
msgid "The HTTP route to request."
msgstr ""

#: interactions.api.http.request._Request.request:5 of
msgid "Optional keyword-only arguments to pass as information in the request."
msgstr ""

#: interactions.api.http.request._Request.request:7 of
msgid "The contents of the request if any."
msgstr ""

#: interactions.api.http.request._Request.close:1 of
msgid "Closes the current session."
msgstr ""

#: interactions.api.http.client.HTTPClient:1 of
msgid "The user-facing client of the Web API for individual endpoints."
msgstr ""

#: interactions.api.http.client.HTTPClient:3 of
msgid "The token of the application."
msgstr ""

#: interactions.api.http.client.HTTPClient:4 of
msgid "The requesting interface for endpoints."
msgstr ""

#: interactions.api.http.client.HTTPClient:5 of
msgid "The referenced cache."
msgstr ""

#: interactions.api.http.client.HTTPClient.get_gateway:1 of
msgid ""
"This calls the Gateway endpoint and returns a v9 gateway link with JSON "
"encoding."
msgstr ""

#: interactions.api.http.client.HTTPClient.get_bot_gateway:1 of
msgid "This calls the BOT Gateway endpoint."
msgstr ""

#: interactions.api.http.client.HTTPClient.get_bot_gateway:3 of
msgid "A tuple denoting (shard, gateway_url), url from API v9 and JSON encoding"
msgstr ""

#: interactions.api.http.client.HTTPClient.login:1 of
msgid ""
"This 'logins' to the gateway, which makes it available to use any other "
"endpoint."
msgstr ""

#: interactions.api.http.client.HTTPClient.logout:1 of
msgid "This 'log outs' the session."
msgstr ""

#: interactions.api.http.client.HTTPClient.get_current_bot_information:1 of
msgid "Returns the bot user application object without flags."
msgstr ""

#: interactions.api.http.client.HTTPClient.get_current_authorisation_information:1
#: of
msgid "Returns info about the current authorization of the bot user"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel:1 of
msgid ""
"Gets a channel by ID. If the channel is a thread, it also includes thread"
" members (and other thread attributes)."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:6
#: interactions.api.http.channel.ChannelRequest.create_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:3
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:3
#: interactions.api.http.channel.ChannelRequest.get_channel:3
#: interactions.api.http.channel.ChannelRequest.get_channel_invites:3
#: interactions.api.http.channel.ChannelRequest.get_channel_messages:6
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:3
#: interactions.api.http.channel.ChannelRequest.get_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.modify_channel:3
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.move_channel:4
#: interactions.api.http.channel.ChannelRequest.trigger_typing:6
#: interactions.api.http.message.MessageRequest.pin_message:3
#: interactions.api.http.message.MessageRequest.unpin_message:3
#: interactions.api.http.webhook.WebhookRequest.create_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:3 of
msgid "Channel ID snowflake."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel:4 of
msgid "Dictionary of the channel object."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_channel:1 of
msgid "Deletes a channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_channel:3 of
msgid "Channel ID snowflake"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:1 of
msgid "Get messages from a channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:4 of
msgid "around, before, and after arguments are mutually exclusive."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:7 of
msgid "How many messages to get. Defaults to 50, the max is 100."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:8 of
msgid "Get messages around this snowflake ID."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:9 of
msgid "Get messages before this snowflake ID."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:10 of
msgid "Get messages after this snowflake ID."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:11 of
msgid "An array of Message objects."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:1 of
msgid "Creates a channel within a guild."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:4 of
msgid "This does not handle payload in this method. Tread carefully."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:6
#: interactions.api.http.channel.ChannelRequest.move_channel:3
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:3
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:3
#: interactions.api.http.guild.GuildRequest.add_guild_member:3
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:3
#: interactions.api.http.guild.GuildRequest.create_guild_role:3
#: interactions.api.http.guild.GuildRequest.create_guild_template:3
#: interactions.api.http.guild.GuildRequest.delete_guild:3
#: interactions.api.http.guild.GuildRequest.delete_guild_integration:3
#: interactions.api.http.guild.GuildRequest.delete_guild_role:3
#: interactions.api.http.guild.GuildRequest.delete_guild_template:3
#: interactions.api.http.guild.GuildRequest.get_guild_bans:6
#: interactions.api.http.guild.GuildRequest.get_guild_integrations:3
#: interactions.api.http.guild.GuildRequest.get_guild_invites:3
#: interactions.api.http.guild.GuildRequest.get_guild_preview:3
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:3
#: interactions.api.http.guild.GuildRequest.get_guild_templates:3
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:3
#: interactions.api.http.guild.GuildRequest.get_guild_widget:3
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:6
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:3
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:6
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:3
#: interactions.api.http.guild.GuildRequest.modify_guild:3
#: interactions.api.http.guild.GuildRequest.modify_guild_role:3
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:3
#: interactions.api.http.guild.GuildRequest.modify_guild_template:3
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:3
#: interactions.api.http.guild.GuildRequest.modify_guild_widget:3
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:3
#: interactions.api.http.guild.GuildRequest.remove_guild_member:3
#: interactions.api.http.guild.GuildRequest.sync_guild_template:3
#: interactions.api.http.member.MemberRequest.get_member:3
#: interactions.api.http.member.MemberRequest.modify_member:5
#: interactions.api.http.member.MemberRequest.search_guild_members:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:3
#: of
msgid "Guild ID snowflake."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:7 of
msgid "Payload data."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:8 of
msgid "Reason to show in audit log, if needed."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel:9 of
msgid "Channel object as dictionary."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:1 of
msgid "Moves a channel to a new position."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:5 of
msgid "The new channel position."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:6 of
msgid "The category parent ID, if needed."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:7 of
msgid ""
"Sync permissions with the parent associated with parent_id. Defaults to "
"False."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:8 of
msgid "Reason to display to the audit log, if any."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.move_channel:9
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:7
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:7 of
msgid "?"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_channel:1 of
msgid "Update a channel's settings."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_channel:4 of
msgid "Data representing updated settings."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_channel:5 of
msgid "Reason, if any."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_channel:6 of
msgid "Channel with updated attributes, if successful."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_invites:1 of
msgid "Get the invites for the channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_channel_invites:4 of
msgid "List of invite objects"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:1 of
msgid "Creates an invite for the given channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:4 of
msgid "This method does not handle payload. It just sends it."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:7 of
msgid "Data representing the payload/invite attributes."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:8 of
msgid "Reason to show in the audit log, if any."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:9 of
msgid "An invite object."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:1 of
msgid ""
"Edits the channel's permission overwrites for a user or role in a given "
"channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:4
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:4 of
msgid "The ID of the overridden object."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:5 of
msgid "the bitwise value of all allowed permissions"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:6 of
msgid "the bitwise value of all disallowed permissions"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:7 of
msgid "0 for a role or 1 for a member"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:5
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:8 of
msgid "Reason to display in the Audit Log, if given."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:1 of
msgid "Deletes a channel permission overwrite for a user or role in a channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.trigger_typing:1 of
msgid "Posts \"... is typing\" in a given channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.trigger_typing:4 of
msgid ""
"By default, this lib doesn't use this endpoint, however, this is listed "
"for third-party implementation."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:1 of
msgid "Get all pinned messages from a channel."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:4 of
msgid "A list of pinned message objects."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:1 of
msgid "Create a new stage instance."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:4 of
msgid "The topic of the stage instance. Limited to 1-120 characters."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:5 of
msgid "The privacy_level of the stage instance (defaults to guild-only \"1\")."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:6
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:4
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:6 of
msgid "The reason for the creating the stage instance, if any."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:7 of
msgid "The new stage instance"
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_stage_instance:1 of
msgid "Get the stage instance associated with a given channel, if it exists."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.get_stage_instance:4 of
msgid "A stage instance."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:1 of
msgid "Update the fields of a given stage instance."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:4 of
msgid ""
"The new topic of the stage instance, if given. Limited to 1-120 "
"characters."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:5 of
msgid "The new privacy_level of the stage instance."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:7 of
msgid "The updated stage instance."
msgstr ""

#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:1 of
msgid "Delete a stage instance."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:1 of
msgid "Gets all emojis from a guild."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:4 of
msgid "A list of emojis."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:1 of
msgid "Gets an emote from a guild."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:4 of
msgid "Emoji ID snowflake."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:5 of
msgid "Emoji object"
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:1 of
msgid "Creates an emoji."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:4 of
msgid "Emoji parameters."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:5
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:5
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:6 of
msgid "Optionally, give a reason."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:6 of
msgid "An emoji object with the included parameters."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:1 of
msgid "Modifies an emoji."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:4
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:4 of
msgid "Emoji ID snowflake"
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:5 of
msgid "Emoji parameters with updated attributes"
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:7 of
msgid "An emoji object with updated attributes."
msgstr ""

#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:1 of
msgid "Deletes an emoji."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_self_guilds:1 of
msgid "Gets all guild objects associated with the current bot user."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_self_guilds:3 of
msgid ":return a list of partial guild objects the current bot user is a part of."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild:1 of
msgid "Requests an individual guild from the API."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild:3
#: interactions.api.http.guild.GuildRequest.leave_guild:3 of
msgid "The guild snowflake ID associated."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild:4 of
msgid "Whether the approximate member count should be included"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild:5 of
msgid "The guild object associated, if any."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_preview:1 of
msgid "Get a guild's preview."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_preview:4 of
msgid "Guild Preview object associated with the snowflake"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild:1 of
msgid "Modifies a guild's attributes."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild:4 of
msgid "The parameters to change."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild:5 of
msgid "Reason to send to the audit log, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild:6 of
msgid "The modified guild object as a dictionary"
msgstr ""

#: interactions.api.http.guild.GuildRequest.leave_guild:1 of
msgid "Leaves a guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.leave_guild:4 of
msgid "None"
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild:1 of
msgid "Deletes a guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget:1 of
msgid "Returns the widget for the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget:4
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:4 of
msgid "Guild Widget contents as a dict: {\"enabled\":bool, \"channel_id\": str}"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:1 of
msgid "Get guild widget settings."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:1 of
msgid "Get an url representing a png image widget for the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:4 of
msgid ""
"See _<https://discord.com/developers/docs/resources/guild#get-guild-"
"widget-image> for list of styles."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:7 of
msgid "The style of widget required, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:8 of
msgid "A url pointing to this image"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:1 of
msgid "Modify a guild widget."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:4 of
msgid "Payload containing new widget attributes."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:5 of
msgid "Updated widget attributes."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_invites:1 of
msgid "Retrieves a list of invite objects with their own metadata."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_invites:4 of
msgid "A list of invite objects"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:1 of
msgid "Retrieves from the API a welcome screen associated with the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:4 of
msgid "Welcome Screen object"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:1 of
msgid "Modify the guild's welcome screen."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:4 of
msgid "Whether the welcome screen is enabled or not."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:5 of
msgid ""
"The new channels (by their ID) linked in the welcome screen and their "
"display options"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:6 of
msgid "The new server description to show in the welcome screen"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:7 of
msgid "Updated Welcome screen object."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_integrations:1 of
msgid "Gets a list of integration objects associated with the Guild from the API."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_integrations:4 of
msgid "An array of integration objects"
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_integration:1 of
msgid "Deletes an integration from the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_integration:4 of
msgid "Integration ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:1
#: of
msgid "Update the current user voice state."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:4
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:5 of
msgid "Voice channel ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:5
#: of
msgid "Toggle the user's suppress state, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:6
#: of
msgid "Sets the user's request to speak, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:1 of
msgid "Modify the voice state of a user."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:4
#: interactions.api.http.guild.GuildRequest.get_user_ban:4
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:4
#: interactions.api.http.guild.GuildRequest.remove_guild_member:4 of
msgid "User ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:6 of
msgid "Toggles the user's suppress state, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:1
#: of
msgid "Create a new guild based on a template."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:4
#: of
msgid "This endpoint can only be used by bots in less than 10 guilds."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:6
#: of
msgid "The code of the template to use."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:7
#: of
msgid "The name of the guild (2-100 characters)"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:8
#: of
msgid "Guild icon URI, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:9
#: of
msgid "The newly created guild object."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_templates:1 of
msgid "Returns an array of guild templates."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_templates:4 of
msgid "An array of guild templates"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_template:1 of
msgid "Create a guild template for the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_template:4
#: interactions.api.http.guild.GuildRequest.modify_guild_template:5 of
msgid "The name of the template"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_template:5 of
msgid "The description of the template, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_template:6 of
msgid "The created guild template"
msgstr ""

#: interactions.api.http.guild.GuildRequest.sync_guild_template:1 of
msgid "Sync the template to the guild's current state."
msgstr ""

#: interactions.api.http.guild.GuildRequest.sync_guild_template:4 of
msgid "The code for the template to sync"
msgstr ""

#: interactions.api.http.guild.GuildRequest.sync_guild_template:5 of
msgid "The updated guild template."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_template:1 of
msgid "Modify a guild template."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_template:4
#: interactions.api.http.guild.GuildRequest.modify_guild_template:4 of
msgid "Template ID."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_template:6 of
msgid "The description of the template"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_template:7 of
msgid "The updated guild template"
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_template:1 of
msgid "Delete the guild template."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_template:5 of
msgid "The deleted template object"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_all_channels:1 of
msgid "Requests from the API to get all channels in the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_all_channels:3 of
msgid "Guild Snowflake ID"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_all_channels:4 of
msgid "A list of channels."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_all_roles:1 of
msgid "Gets all roles from a Guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_ban:3
#: interactions.api.http.guild.GuildRequest.create_guild_kick:3
#: interactions.api.http.guild.GuildRequest.get_all_roles:3
#: interactions.api.http.guild.GuildRequest.get_user_ban:3
#: interactions.api.http.guild.GuildRequest.remove_guild_ban:3
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:8
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:4
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:4
#: interactions.api.http.member.MemberRequest.get_list_of_members:3
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:3 of
msgid "Guild ID snowflake"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_all_roles:4 of
msgid "An array of Role objects as dictionaries."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_role:1 of
msgid "Create a new role for the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_role:4 of
msgid "A dict containing metadata for the role."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_role:5
#: interactions.api.http.guild.GuildRequest.modify_guild_role:6
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:5 of
msgid "The reason for this action, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_role:6 of
msgid "Role object"
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:1 of
msgid "Modify the position of a role in the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:4 of
msgid ""
"A list of dicts containing the role IDs and new positions for all the "
"roles to be moved."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:6 of
msgid "List of guild roles with updated hierarchy."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role:1 of
msgid "Modify a given role for the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_role:4
#: interactions.api.http.guild.GuildRequest.modify_guild_role:4 of
msgid "Role ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role:5 of
msgid "A dict containing updated metadata for the role."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_guild_role:7 of
msgid "Updated role object."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_role:1 of
msgid "Delete a guild role."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_guild_role:5 of
msgid "The reason for this action, if any."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_kick:1 of
msgid "Kicks a person from the guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_ban:4
#: interactions.api.http.guild.GuildRequest.create_guild_kick:4
#: interactions.api.http.guild.GuildRequest.remove_guild_ban:4 of
msgid "User ID snowflake"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_kick:5 of
msgid "Optional Reason argument."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_ban:1 of
msgid ""
"Bans a person from the guild, and optionally deletes previous messages "
"sent by them."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_ban:5 of
msgid "Number of days to delete messages, from 0 to 7. Defaults to 0"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_guild_ban:6 of
msgid "Optional reason to ban."
msgstr ""

#: interactions.api.http.guild.GuildRequest.remove_guild_ban:1 of
msgid "Unbans someone using the API."
msgstr ""

#: interactions.api.http.guild.GuildRequest.remove_guild_ban:5 of
msgid "Optional reason to unban."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:1 of
msgid "Gets a list of banned users."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:4 of
msgid ""
"If both ``before`` and ``after`` are provided, only ``before`` is "
"respected."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:7 of
msgid "Number of users to return. Defaults to 1000."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:8 of
msgid "Consider only users before the given User ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:9 of
msgid "Consider only users after the given User ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_bans:10 of
msgid "A list of banned users."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_user_ban:1 of
msgid ""
"Gets an object pertaining to the user, if it exists. Returns a 404 if it "
"doesn't."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_user_ban:5 of
msgid "Ban object if it exists."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:1 of
msgid ""
"A low level method of adding a user to a guild with pre-defined "
"attributes."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:5 of
msgid "User access token."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:6 of
msgid "User's nickname on join."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:7 of
msgid "An array of roles that the user is assigned."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:8 of
msgid "Whether the user is mute in voice channels."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:9 of
msgid "Whether the user is deafened in voice channels."
msgstr ""

#: interactions.api.http.guild.GuildRequest.add_guild_member:10 of
msgid "Guild member object as dictionary"
msgstr ""

#: interactions.api.http.guild.GuildRequest.remove_guild_member:1 of
msgid ""
"A low level method of removing a member from a guild. This is different "
"from banning them."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:12
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:15
#: interactions.api.http.guild.GuildRequest.remove_guild_member:5 of
msgid "Reason to send to audit log, if any."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:1 of
msgid ""
"Retrieves a dict from an API that results in how many members would be "
"pruned given the amount of days."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:4 of
msgid "Number of days to count. Defaults to ``7``."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:5 of
msgid "Role IDs to include, if given."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:6 of
msgid "A dict denoting `{\"pruned\": int}`"
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_guild_auditlog:1 of
msgid ""
"Returns an audit log object for the guild. Requires the 'VIEW_AUDIT_LOG' "
"permission. :param guild_id: Guild ID snowflake. :param user_id: User ID "
"snowflake. filter the log for actions made by a user. :param action_type:"
" the type ID of audit log event. :param before: filter the log before a "
"certain entry id. :param limit: how many entries are returned (default "
"50, minimum 1, maximum 100)"
msgstr ""

#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules:1 of
msgid ""
"Returns a list of all AutoMod rules in a guild. :poram guild_id: Guild ID"
" snowflake. :return: A list of dictionaries containing the automod rules."
msgstr ""

#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule:1 of
msgid ""
"Get a single AutoMod rule in a guild. :param guild_id: Guild ID "
"snowflake. :param rule_id: Rule ID snowflake. :return: A dictionary "
"containing the automod rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:1 of
msgid "Create a new AutoMod rule in a guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:4 of
msgid "The name of the new rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:5 of
msgid "The event type of the new rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:6 of
msgid "The trigger type of the new rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:7 of
msgid ""
"The trigger metadata payload representation. This can be omitted based on"
" the trigger type."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:8 of
msgid "The actions that will execute when the rule is triggered."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:9 of
msgid "Whether the rule will be enabled upon creation. False by default."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:10
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:13 of
msgid ""
"The role IDs that are whitelisted by the rule, if given. The maximum is "
"20."
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:11
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:14 of
msgid ""
"The channel IDs that are whitelisted by the rule, if given. The maximum "
"is 20"
msgstr ""

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:13 of
msgid "A dictionary containing the new automod rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:1 of
msgid "Modify an existing AutoMod rule in a guild."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:4 of
msgid "All parameters besides guild and rule ID are optional."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:7 of
msgid "Rule ID snowflake."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:8 of
msgid "The new name of the rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:9 of
msgid "The new event type of the rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:10 of
msgid ""
"The new trigger metadata payload representation. This can be omitted "
"based on the trigger type."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:11 of
msgid "The new actions that will execute when the rule is triggered."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:12 of
msgid "Whether the rule will be enabled upon creation."
msgstr ""

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:16 of
msgid "A dictionary containing the updated automod rule."
msgstr ""

#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule:1 of
msgid ""
"Deletes an AutoMod rule. :param guild_id: Guild ID snowflake. :param "
"rule_id: Rule ID snowflake. :param reason: Reason to send to audit log, "
"if any."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:1
#: of
msgid "Get all application commands from an application."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_application_command:3
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:4
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:7
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:3
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:3
#: interactions.api.http.interaction.InteractionRequest.get_application_commands:3
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:6
#: of
msgid "Application ID snowflake"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:4
#: of
msgid "Guild to get commands from, if specified. Defaults to global (None)"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:5
#: of
msgid ""
"Whether to include full localization dictionaries (name_localizations and"
" description_localizations) in the returned objects, instead of the "
"name_localized and description_localized fields. Default false."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:6
#: of
msgid "A list of Application commands."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_application_command:1
#: of
msgid "Registers to the Discord API an application command."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_application_command:4
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:7
#: of
msgid "The dictionary that contains the command (name, description, etc)"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_application_command:5
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:8
#: of
msgid "Guild ID snowflake to put them in, if applicable."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_application_command:6
#: of
msgid "An application command object."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:1
#: of
msgid ""
"Overwrites application command(s) from a scope to the new, updated "
"commands."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:4
#: of
msgid ""
"This applies to all forms of application commands (slash and context "
"menus)"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:9
#: of
msgid "An array of application command objects."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:1
#: of
msgid "Edits an application command."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:3
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:4
#: interactions.api.http.interaction.InteractionRequest.edit_application_command:3
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:5
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:4
#: of
msgid "Application ID snowflake."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:4
#: of
msgid "A dictionary containing updated attributes"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:5
#: of
msgid "The application command ID snowflake"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:6
#: of
msgid "Guild ID snowflake, if given. Defaults to None/global."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:7
#: of
msgid "The updated application command object."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:1
#: of
msgid "Deletes an application command."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:4
#: of
msgid "Application command ID snowflake."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:5
#: of
msgid "Guild ID snowflake, if declared. Defaults to None (Global)."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:1
#: of
msgid "Edits permissions for an application command."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:4
#: of
msgid ""
"This requires authenticating with the Bearer token. Likewise, if this "
"function is used in a bot process with a bot token, this will fail."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:9
#: of
msgid "Application command ID snowflake"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:10
#: of
msgid "Permission data."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:11
#: of
msgid "Returns an updated Application Guild permission object."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:1
#: of
msgid ""
"Gets, from the Discord API, permissions from a specific Guild application"
" command."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:5
#: of
msgid "Application Command ID snowflake"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:6
#: of
msgid "a Guild Application Command permissions object"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:1
#: of
msgid ""
"Gets, from the Discord API, permissions from all Application commands at "
"that Guild."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:5
#: of
msgid "An array of Guild Application Command permissions"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:1
#: of
msgid "Posts initial response to an interaction, but you need to add the token."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:3
#: of
msgid "Token."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:5
#: interactions.api.http.user.UserRequest.modify_self:3 of
msgid "The data to send."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:1
#: of
msgid "Gets an existing interaction message."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:3
#: of
msgid "token"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:5
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:6
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:5
#: of
msgid ""
"Message ID snowflake. Defaults to `@original` which represents the "
"initial response msg."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:6
#: of
msgid "Message data."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:1
#: of
msgid ""
"Edits an existing interaction message, but token needs to be manually "
"called."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:3
#: of
msgid "A dictionary containing the new response."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest._post_followup:5
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:3
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:4
#: of
msgid "the token of the interaction"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:7
#: of
msgid "Updated message data."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:1
#: of
msgid "Deletes an existing interaction message."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest._post_followup:1 of
msgid "Send a followup to an interaction."
msgstr ""

#: interactions.api.http.interaction.InteractionRequest._post_followup:3 of
msgid "the payload to send"
msgstr ""

#: interactions.api.http.interaction.InteractionRequest._post_followup:4 of
msgid "the id of the application"
msgstr ""

#: interactions.api.http.member.MemberRequest.get_member:1 of
msgid "Uses the API to fetch a member from a guild."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_member:4
#: interactions.api.http.member.MemberRequest.modify_member:4 of
msgid "Member ID snowflake."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_member:5 of
msgid "A member object, if any."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_list_of_members:1 of
msgid "Lists the members of a guild."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_list_of_members:4 of
msgid "How many members to get from the API. Max is 1000. Defaults to 1."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_list_of_members:5 of
msgid "Get Member IDs after this snowflake. Defaults to None."
msgstr ""

#: interactions.api.http.member.MemberRequest.get_list_of_members:6 of
msgid "An array of Member objects."
msgstr ""

#: interactions.api.http.member.MemberRequest.search_guild_members:1 of
msgid ""
"Search a guild for members whose username or nickname starts with "
"provided string."
msgstr ""

#: interactions.api.http.member.MemberRequest.search_guild_members:4 of
msgid "The string to search for"
msgstr ""

#: interactions.api.http.member.MemberRequest.search_guild_members:5 of
msgid "The number of members to return. Defaults to 1."
msgstr ""

#: interactions.api.http.member.MemberRequest.add_member_role:1 of
msgid "Adds a role to a guild member."
msgstr ""

#: interactions.api.http.member.MemberRequest.add_member_role:3
#: interactions.api.http.member.MemberRequest.remove_member_role:3 of
msgid "The ID of the guild"
msgstr ""

#: interactions.api.http.member.MemberRequest.add_member_role:4
#: interactions.api.http.member.MemberRequest.remove_member_role:4 of
msgid "The ID of the user"
msgstr ""

#: interactions.api.http.member.MemberRequest.add_member_role:5
#: interactions.api.http.member.MemberRequest.remove_member_role:5 of
msgid "The ID of the role to add"
msgstr ""

#: interactions.api.http.member.MemberRequest.add_member_role:6
#: interactions.api.http.member.MemberRequest.modify_member:7
#: interactions.api.http.member.MemberRequest.remove_member_role:6 of
msgid "The reason for this action. Defaults to None."
msgstr ""

#: interactions.api.http.member.MemberRequest.remove_member_role:1 of
msgid "Removes a role to a guild member."
msgstr ""

#: interactions.api.http.member.MemberRequest.modify_member:1 of
msgid ""
"Edits a member. This can nick them, change their roles, mute/deafen (and "
"its contrary), and moving them across channels and/or disconnect them."
msgstr ""

#: interactions.api.http.member.MemberRequest.modify_member:6 of
msgid "Payload representing parameters (nick, roles, mute, deaf, channel_id)"
msgstr ""

#: interactions.api.http.member.MemberRequest.modify_member:8 of
msgid "Modified member object."
msgstr ""

#: interactions.api.http.message.MessageRequest.send_message:1 of
msgid ""
"A higher level implementation of :meth:`create_message()` that handles "
"the payload dict internally. Does not integrate components into the "
"function, and is a port from v3.0.0"
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message:1 of
msgid "Send a message to the specified channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message:3 of
msgid "Dictionary contents of a message. (i.e. message payload)"
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message:4
#: interactions.api.http.message.MessageRequest.delete_message:3
#: interactions.api.http.message.MessageRequest.delete_messages:3
#: interactions.api.http.message.MessageRequest.edit_message:3
#: interactions.api.http.reaction.ReactionRequest.create_reaction:3
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:3
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:3
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:3 of
msgid "Channel snowflake ID."
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message:5
#: interactions.api.http.message.MessageRequest.edit_message:6 of
msgid "An optional list of files to send attached to the message."
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message of
msgid "return dict"
msgstr ""

#: interactions.api.http.message.MessageRequest.create_message:6 of
msgid "Dictionary representing a message (?)"
msgstr ""

#: interactions.api.http.message.MessageRequest.get_message:1 of
msgid "Get a specific message in the channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.get_message:3 of
msgid "the channel this message belongs to"
msgstr ""

#: interactions.api.http.message.MessageRequest.get_message:4 of
msgid "the id of the message"
msgstr ""

#: interactions.api.http.message.MessageRequest.get_message:5 of
msgid "message if it exists."
msgstr ""

#: interactions.api.http.message.MessageRequest.delete_message:1 of
msgid "Deletes a message from a specified channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.delete_message:4
#: interactions.api.http.message.MessageRequest.edit_message:4
#: interactions.api.http.reaction.ReactionRequest.create_reaction:4
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:4
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:4
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:4 of
msgid "Message snowflake ID."
msgstr ""

#: interactions.api.http.message.MessageRequest.delete_message:5
#: interactions.api.http.message.MessageRequest.delete_messages:5 of
msgid "Optional reason to show up in the audit log. Defaults to `None`."
msgstr ""

#: interactions.api.http.message.MessageRequest.delete_messages:1 of
msgid "Deletes messages from a specified channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.delete_messages:4 of
msgid "An array of message snowflake IDs."
msgstr ""

#: interactions.api.http.message.MessageRequest.edit_message:1 of
msgid "Edits a message that already exists."
msgstr ""

#: interactions.api.http.message.MessageRequest.edit_message:5 of
msgid "Any new data that needs to be changed."
msgstr ""

#: interactions.api.http.message.MessageRequest.edit_message:8 of
msgid "A message object with edited attributes."
msgstr ""

#: interactions.api.http.message.MessageRequest.pin_message:1 of
msgid "Pin a message to a channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.pin_message:4
#: interactions.api.http.message.MessageRequest.unpin_message:4
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:5
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:5 of
msgid "Message ID snowflake."
msgstr ""

#: interactions.api.http.message.MessageRequest.unpin_message:1 of
msgid "Unpin a message to a channel."
msgstr ""

#: interactions.api.http.message.MessageRequest.publish_message:1 of
msgid ""
"Publishes (API calls it crossposts) a message in a News channel to any "
"that is followed by."
msgstr ""

#: interactions.api.http.message.MessageRequest.publish_message:3 of
msgid "Channel the message is in"
msgstr ""

#: interactions.api.http.message.MessageRequest.publish_message:4 of
msgid "The id of the message to publish"
msgstr ""

#: interactions.api.http.message.MessageRequest.publish_message:5 of
msgid "message object"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.create_reaction:1 of
msgid "Create a reaction for a message."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.create_reaction:5 of
msgid "The emoji to use (format: `name:id`)"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:1 of
msgid "Remove bot user's reaction from a message."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:5
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:5 of
msgid "The emoji to remove (format: `name:id`)"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:1 of
msgid "Remove user's reaction from a message."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:3 of
msgid "The channel this is taking place in"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:4 of
msgid "The message to remove the reaction on."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:5 of
msgid "The emoji to remove. (format: `name:id`)"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:6 of
msgid "The user to remove reaction of."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:1 of
msgid "Remove all reactions from a message."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:3 of
msgid "The channel this is taking place in."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:4 of
msgid "The message to clear reactions from."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:1
#: of
msgid "Remove all reactions of a certain emoji from a message."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:1 of
msgid "Gets the users who reacted to the emoji."
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:5 of
msgid "The emoji to get (format: `name:id`)"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:6 of
msgid "Max number of users to return (1-100)"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:7 of
msgid "Get users after this user ID"
msgstr ""

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:8 of
msgid "A list of users who sent that emoji."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:1
#: of
msgid "Creates a scheduled event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:5
#: of
msgid ""
"The dictionary containing the parameters and values to edit the "
"associated event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:5
#: of
msgid "A dictionary containing the new guild scheduled event object on success."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:1
#: of
msgid "Gets a guild scheduled event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:4
#: of
msgid "Guild Scheduled Event ID snowflake."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:5
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:4
#: of
msgid ""
"A boolean to include number of users subscribed to the associated event, "
"if given."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:6
#: of
msgid "A dictionary containing the guild scheduled event object on success."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:1
#: of
msgid "Gets all guild scheduled events in a guild."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:5
#: of
msgid ""
"A List of a dictionary containing the guild scheduled event objects on "
"success."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:1
#: of
msgid "Modifies a scheduled event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:6
#: of
msgid ""
"A dictionary containing the updated guild scheduled event object on "
"success."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:1
#: of
msgid "Deletes a guild scheduled event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:5
#: of
msgid "Nothing on success."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:1
#: of
msgid "Get the registered users of a scheduled event."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:4
#: of
msgid "Guild Scheduled Event snowflake."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:5
#: of
msgid "Limit of how many users to pull from the event. Defaults to 100."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:6
#: of
msgid "Include guild member data if it exists. Defaults to False."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:7
#: of
msgid "Considers only users before given user ID snowflake. Defaults to None."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:8
#: of
msgid "Considers only users after given user ID snowflake. Defaults to None."
msgstr ""

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:9
#: of
msgid "Returns a list of guild scheduled event user objects on success."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_sticker:1 of
msgid "Get a specific sticker."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_sticker:3 of
msgid "The id of the sticker"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.get_sticker:4 of
msgid "Sticker or None"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs:1 of
msgid "Gets the list of sticker packs available to Nitro subscribers."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs:3 of
msgid "List of sticker packs"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:1 of
msgid "Get the stickers for a guild."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:3 of
msgid "The guild to get stickers from"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:4 of
msgid "List of Stickers or None"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:1 of
msgid "Get a sticker from a guild."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:4 of
msgid "The sticker to get from the guild"
msgstr ""

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:1 of
msgid ""
"Create a new sticker for the guild. Requires the "
"MANAGE_EMOJIS_AND_STICKERS permission."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:3 of
msgid "the payload to send."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:4 of
msgid "The guild to create sticker at."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:6 of
msgid "The reason for this action."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:6 of
msgid "The new sticker data on success."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:1 of
msgid ""
"Modify the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:4 of
msgid "The guild of the target sticker."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:5 of
msgid "The sticker to modify."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:7 of
msgid "The updated sticker data on success."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:1 of
msgid ""
"Delete the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:4 of
msgid "The sticker to delete."
msgstr ""

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:6 of
msgid "Returns 204 No Content on success."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.join_thread:1 of
msgid "Have the bot user join a thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.join_thread:3 of
msgid "The thread to join."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.leave_thread:1 of
msgid "Have the bot user leave a thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.leave_thread:3 of
msgid "The thread to leave."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:1 of
msgid "Add another user to a thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:3
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:3
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:3 of
msgid "The ID of the thread"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:4 of
msgid "The ID of the user to add"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:1 of
msgid "Remove another user from a thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:4 of
msgid "The ID of the user to remove"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:1 of
msgid "Get a member from a thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:4 of
msgid "The ID of the user to find"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:5 of
msgid "A thread member object, if they're in the thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_thread_members:1 of
msgid "Get a list of members in the thread."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_thread_members:3 of
msgid "the id of the thread"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_thread_members:4 of
msgid "a list of thread member objects"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:1 of
msgid "Get a list of archived public threads in a given channel."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:3
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:3
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:3 of
msgid "The channel to get threads from"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:4
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:4
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:4 of
msgid "Optional limit of threads to"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:5
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:5 of
msgid "Get threads before this Thread snowflake ID"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:6
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:6
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:6 of
msgid "a list of threads"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:1
#: of
msgid "Get a list of archived private threads in a channel."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:1
#: of
msgid ""
"Get a list of archived private threads in a channel that the bot has "
"joined."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:5
#: of
msgid "Get threads before this snowflake ID"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_active_threads:1 of
msgid "List active threads within a guild."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_active_threads:3 of
msgid "the guild id to get threads from"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.list_active_threads:4 of
msgid "A list of active threads"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:1 of
msgid ""
"From a given channel, create a Thread with an optional message to start "
"with.."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:3 of
msgid "The ID of the channel to create this thread in"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:4 of
msgid "The name of the thread"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:5 of
msgid ""
"duration in minutes to automatically archive the thread after recent "
"activity, can be set to: 60, 1440, 4320, 10080"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:7 of
msgid ""
"The type of thread, defaults to public. ignored if creating thread from a"
" message"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:8 of
msgid "Boolean to display if the Thread is open to join or private."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:9 of
msgid "An optional message to create a thread from."
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:10 of
msgid "An optional reason for the audit log"
msgstr ""

#: interactions.api.http.thread.ThreadRequest.create_thread:11 of
msgid "The created thread"
msgstr ""

#: interactions.api.http.user.UserRequest.get_self:1 of
msgid "An alias to `get_user`, but only gets the current bot user."
msgstr ""

#: interactions.api.http.user.UserRequest.get_self:3 of
msgid "A partial User object of the current bot user in the form of a dictionary."
msgstr ""

#: interactions.api.http.user.UserRequest.get_user:1 of
msgid "Gets a user object for a given user ID."
msgstr ""

#: interactions.api.http.user.UserRequest.get_user:3 of
msgid "A user snowflake ID. If omitted, this defaults to the current bot user."
msgstr ""

#: interactions.api.http.user.UserRequest.get_user:4 of
msgid "A partial User object in the form of a dictionary."
msgstr ""

#: interactions.api.http.user.UserRequest.modify_self:1 of
msgid "Modify the bot user account settings."
msgstr ""

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:1 of
msgid "Changes a nickname of the current bot user in a guild."
msgstr ""

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:3 of
msgid "Guild snowflake ID."
msgstr ""

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:4 of
msgid "The new nickname, if any."
msgstr ""

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:5 of
msgid "Nothing needed to be yielded."
msgstr ""

#: interactions.api.http.user.UserRequest.create_dm:1 of
msgid "Creates a new DM channel with a user."
msgstr ""

#: interactions.api.http.user.UserRequest.create_dm:3 of
msgid "User snowflake ID."
msgstr ""

#: interactions.api.http.user.UserRequest.create_dm:4 of
msgid "Returns a dictionary representing a DM Channel object."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.create_webhook:1 of
msgid "Create a new webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.create_webhook:4 of
msgid "Name of the webhook (1-80 characters)"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.create_webhook:5 of
msgid "The image for the default webhook avatar, if given."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.create_webhook:7 of
msgid "Webhook object"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:1 of
msgid "Return a list of channel webhook objects."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:4
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:4 of
msgid "List of webhook objects"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:1 of
msgid "Return a list of guild webhook objects."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook:1 of
msgid "Return the new webhook object for the given id."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.delete_webhook:3
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:3
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:3
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:3 of
msgid "Webhook ID snowflake."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook:4 of
msgid "Webhook Token, if given."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook:6 of
msgid ":return:Webhook object"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:1 of
msgid "Modify a webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:3 of
msgid "Webhook ID snowflake"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:4 of
msgid "The payload for the webhook"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_webhook:4
#: interactions.api.http.webhook.WebhookRequest.modify_webhook:5 of
msgid "The token for the webhook, if given."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:7 of
msgid "Modified webhook object."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_webhook:1 of
msgid "Delete a webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:1 of
msgid "Sends a message as a webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:4
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:4
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:4 of
msgid "The token for the webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:5
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:5
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:5 of
msgid "Payload consisting of the message."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:6 of
msgid "The files to upload to the message."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:7 of
msgid ""
"A bool that signifies waiting for server confirmation of a send before "
"responding."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:8 of
msgid "Optional, sends a message to the specified thread."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:9 of
msgid "The message sent, if wait=True, else None."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:1 of
msgid "Sends a message to a Slack-compatible webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://api.slack.com/messaging/webhooks>_` for more details."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:1 of
msgid "Sends a message to a Github-compatible webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://discord.com/developers/docs/resources/webhook#execute-"
"githubcompatible-webhook>_` for more details."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:1 of
msgid "Retrieves a message sent from a Webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:4 of
msgid "Webhook token."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:5 of
msgid "Message ID snowflake,"
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:6 of
msgid "A Message object."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:1 of
msgid "Edits a message sent from a Webhook."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:6 of
msgid "A payload consisting of new message attributes."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:7 of
msgid "An updated message object."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:1 of
msgid "Deletes a message object."
msgstr ""

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:1
#: of
msgid "Deletes the original message object sent."
msgstr ""
